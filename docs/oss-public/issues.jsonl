{"title":"Decide license and stage LICENSE text","body":"Why:\n- Ensure legal clarity and reuse compatibility.\nWhat:\n- Choose LICENSE_INTENT (prefer Apache-2.0 or MIT).\n- Add LICENSE file and headers as applicable.\nAcceptance Criteria:\n- [ ] LICENSE committed.\n- [ ] README mentions license.\nNotes:\n- Links/files: LICENSE, README.md\n- Risk: low","labels":["stage/preflight","type/license","priority/P0"],"milestone":"M1: Pre-flight & History","assignees":[],"depends_on_titles":[]}
{"title":"Define CODEOWNERS and merge policy","body":"Why:\n- Restrict merges to CODEOWNERS and enforce review.\nWhat:\n- Add CODEOWNERS file with {{CODEOWNERS}}.\n- Document in CONTRIBUTING/GOVERNANCE.\nAcceptance Criteria:\n- [ ] CODEOWNERS merged.\n- [ ] CONTRIBUTING updated.\nNotes:\n- Links/files: CODEOWNERS, CONTRIBUTING.md, GOVERNANCE.md\n- Risk: low","labels":["stage/preflight","type/policy","priority/P0"],"milestone":"M1: Pre-flight & History","assignees":[],"depends_on_titles":[]}
{"title":"Draft community health files (README, CONTRIBUTING, COC, SECURITY, SUPPORT)","body":"Why:\n- Baseline community expectations and security processes.\nWhat:\n- Adapt provided drafts; include AI notice verbatim in README.\nAcceptance Criteria:\n- [ ] README with AI notice.\n- [ ] CONTRIBUTING, CODE_OF_CONDUCT, SECURITY, SUPPORT merged.\nNotes:\n- Links/files: drafts provided in PR\n- Risk: low","labels":["stage/preflight","type/docs","priority/P0"],"milestone":"M1: Pre-flight & History","assignees":[],"depends_on_titles":["Decide license and stage LICENSE text"]}
{"title":"Seed label schema and milestones","body":"Why:\n- Consistent triage and planning.\nWhat:\n- Create labels from labels.json and milestones from milestones.txt.\nAcceptance Criteria:\n- [ ] Labels exist.\n- [ ] Milestones created.\nNotes:\n- Links/files: labels.json, milestones.txt\n- Risk: low","labels":["stage/preflight","type/infra","priority/P1"],"milestone":"M1: Pre-flight & History","assignees":[],"depends_on_titles":[]}
{"title":"History & secrets assessment","body":"Why:\n- Detect sensitive data before public launch.\nWhat:\n- If SENSITIVE_HISTORY_RISK ≥ medium: run gitleaks/trufflehog; confirm/triage findings.\nAcceptance Criteria:\n- [ ] Report generated and reviewed.\nNotes:\n- Links/files: Report artifact; tools configs\n- Risk: {{SENSITIVE_HISTORY_RISK}}","labels":["stage/preflight","type/security","priority/P0"],"milestone":"M1: Pre-flight & History","assignees":[],"depends_on_titles":[]}
{"title":"Remediate history & secrets (if needed)","body":"Why:\n- Remove sensitive data and rotate credentials.\nWhat:\n- Use git filter-repo or BFG; force-push; rotate tokens; document actions.\nAcceptance Criteria:\n- [ ] Purge completed.\n- [ ] Credentials rotated.\n- [ ] Runbook updated.\nNotes:\n- Links/files: HISTORY_REMEDIATION.md\n- Risk: medium","labels":["stage/preflight","type/security","priority/P0"],"milestone":"M1: Pre-flight & History","assignees":[],"depends_on_titles":["History & secrets assessment"]}
{"title":"Enable Secret Scanning and Push Protection","body":"Why:\n- Prevent secrets from entering history.\nWhat:\n- Turn on in repo settings and rulesets.\nAcceptance Criteria:\n- [ ] Secret Scanning enabled.\n- [ ] Push Protection enabled.\nNotes:\n- Risk: low","labels":["stage/hardening","type/security","priority/P0"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":[]}
{"title":"Enable Dependabot (alerts + security updates)","body":"Why:\n- Stay ahead of vulnerable dependencies.\nWhat:\n- Enable alerts and automated security updates.\nAcceptance Criteria:\n- [ ] Alerts enabled.\n- [ ] Security updates PRs active.\nNotes:\n- Risk: low","labels":["stage/hardening","type/security","priority/P1"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":[]}
{"title":"Enable CodeQL analysis (if supported)","body":"Why:\n- Automated code scanning for vulnerabilities.\nWhat:\n- Add CodeQL workflow.\nAcceptance Criteria:\n- [ ] CodeQL workflow merged and green.\nNotes:\n- Risk: low","labels":["stage/hardening","type/ci","priority/P1"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":[]}
{"title":"Configure branch protections and rulesets","body":"Why:\n- Enforce safe contributions.\nWhat:\n- Protect {{DEFAULT_BRANCH}}: require PRs, block force pushes, enforce for admins, require ≥1 approval + CODEOWNERS, resolve conversations, dismiss stale reviews, status checks, (optional) signed commits.\nAcceptance Criteria:\n- [ ] Branch protection active.\n- [ ] Ruleset requiring PRs and blocking force pushes on main/release branches.\nNotes:\n- Reference:\n`gh api -X PUT repos/{{ORG_OR_USER}}/{{REPO}}/branches/{{DEFAULT_BRANCH}}/protection \\\n -H \"Accept: application/vnd.github+json\" \\\n -f required_status_checks='{}' \\\n -f enforce_admins=true \\\n -f required_pull_request_reviews='{}' \\\n -f restrictions='null'`\n- Risk: low","labels":["stage/hardening","type/policy","priority/P0"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":["Define CODEOWNERS and merge policy"]}
{"title":"Require status checks in protections","body":"Why:\n- Fail fast and ensure quality.\nWhat:\n- Make CI checks required per {{WORKFLOWS_USED}}.\nAcceptance Criteria:\n- [ ] Required checks listed in branch protection.\nNotes:\n- Risk: low","labels":["stage/hardening","type/ci","priority/P0"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":["Configure branch protections and rulesets"]}
{"title":"Adopt prompt metadata schema and examples","body":"Why:\n- Consistency and evaluability across prompt packages.\nWhat:\n- Add docs/prompt-metadata.schema.json and example; wire validation in tests.\nAcceptance Criteria:\n- [ ] Schema committed.\n- [ ] Validation step green.\nNotes:\n- Risk: low","labels":["stage/hardening","type/prompt-quality","priority/P1"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":[]}
{"title":"Add evaluation harness and sample I/O","body":"Why:\n- Validate behavior and prevent regressions.\nWhat:\n- Provide minimal harness + sample inputs/outputs per prompt.\nAcceptance Criteria:\n- [ ] Harness runs locally.\n- [ ] At least 1 example per prompt.\nNotes:\n- Risk: low","labels":["stage/hardening","type/prompt-quality","priority/P1"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":["Adopt prompt metadata schema and examples"]}
{"title":"Document model/provider safety notes and caveats","body":"Why:\n- Safe and compliant usage across providers.\nWhat:\n- Add per-model/provider safety notes; licensing caveats for fragments.\nAcceptance Criteria:\n- [ ] Safety notes added to each prompt doc.\nNotes:\n- Risk: low","labels":["stage/hardening","type/prompt-quality","priority/P2"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":[]}
{"title":"Add usage Terms-of-Use reminders to docs","body":"Why:\n- Clarify obligations and constraints for users.\nWhat:\n- Add TOU reminders to docs; link LICENSE and AI notice.\nAcceptance Criteria:\n- [ ] TOU reminders present.\nNotes:\n- Risk: low","labels":["stage/hardening","type/docs","priority/P2"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":["Draft community health files (README, CONTRIBUTING, COC, SECURITY, SUPPORT)"]}
{"title":"Finalize issue and PR templates","body":"Why:\n- Improve triage and review quality.\nWhat:\n- Add GitHub templates provided; test on a sample issue/PR.\nAcceptance Criteria:\n- [ ] Templates live.\nNotes:\n- Risk: low","labels":["stage/community","type/docs","priority/P1"],"milestone":"M3: Community Health","assignees":[],"depends_on_titles":[]}
{"title":"Establish governance and triage policy","body":"Why:\n- Predictable decision-making and maintenance.\nWhat:\n- Publish GOVERNANCE.md; define triage SLAs and labels.\nAcceptance Criteria:\n- [ ] Governance doc merged.\nNotes:\n- Risk: low","labels":["stage/community","type/policy","priority/P1"],"milestone":"M3: Community Health","assignees":[],"depends_on_titles":["Define CODEOWNERS and merge policy"]}
{"title":"Set project board (optional) and workflows","body":"Why:\n- Visual planning and status.\nWhat:\n- Create {{PROJECT_BOARD}}; add columns; automation rules.\nAcceptance Criteria:\n- [ ] Board created and linked.\nNotes:\n- Risk: low","labels":["stage/community","type/infra","priority/P2"],"milestone":"M3: Community Health","assignees":[],"depends_on_titles":["Seed label schema and milestones"]}
{"title":"Prepare v0.x.0 release and CHANGELOG","body":"Why:\n- Provide a stable initial public version.\nWhat:\n- Populate CHANGELOG; tag v0.x.0; release notes.\nAcceptance Criteria:\n- [ ] Tag pushed; release published.\nNotes:\n- Risk: low","labels":["stage/launch","type/docs","priority/P0"],"milestone":"M4: Public Launch","assignees":[],"depends_on_titles":["Finalize issue and PR templates"]}
{"title":"Flip repository visibility to public","body":"Why:\n- Launch the project.\nWhat:\n- After all checks pass, change visibility to public.\nAcceptance Criteria:\n- [ ] Repo is public.\nNotes:\n- Risk: medium","labels":["stage/launch","type/policy","priority/P0"],"milestone":"M4: Public Launch","assignees":[],"depends_on_titles":["Prepare v0.x.0 release and CHANGELOG","Configure branch protections and rulesets"]}
{"title":"Post-launch automations (link/license/prompt validations)","body":"Why:\n- Ongoing quality and compliance.\nWhat:\n- Add scheduled link check, license check, prompt schema validation.\nAcceptance Criteria:\n- [ ] Schedules added and green.\nNotes:\n- Risk: low","labels":["stage/postlaunch","type/ci","priority/P2"],"milestone":"M5: Post-launch Polish","assignees":[],"depends_on_titles":["Flip repository visibility to public"]}
{"title":"Quarterly security & policy review","body":"Why:\n- Keep posture current.\nWhat:\n- Review rulesets, scanners, tokens, and response metrics; rotate as needed.\nAcceptance Criteria:\n- [ ] Review notes committed.\nNotes:\n- Risk: low","labels":["stage/postlaunch","type/security","priority/P2"],"milestone":"M5: Post-launch Polish","assignees":[],"depends_on_titles":[]}
{"title":"Document history & secrets runbook","body":"Why:\n- Preparedness for future incidents.\nWhat:\n- Add runbook covering scan → confirm → purge → rotate → document.\nAcceptance Criteria:\n- [ ] RUNBOOK committed.\nNotes:\n- Risk: low","labels":["stage/preflight","type/security","priority/P1"],"milestone":"M1: Pre-flight & History","assignees":[],"depends_on_titles":["History & secrets assessment"]}
{"title":"Add repository description, topics, and badges","body":"Why:\n- Discoverability and credibility.\nWhat:\n- Update repo settings and README badges.\nAcceptance Criteria:\n- [ ] Description, topics set.\n- [ ] Badges added (build, license).\nNotes:\n- Risk: low","labels":["stage/community","type/docs","priority/P2"],"milestone":"M3: Community Health","assignees":[],"depends_on_titles":[]}
{"title":"Require signed commits (optional)","body":"Why:\n- Stronger provenance.\nWhat:\n- Enable signed commits requirement if team can support.\nAcceptance Criteria:\n- [ ] Signed commits enforced or documented decision.\nNotes:\n- Risk: low","labels":["stage/hardening","type/policy","priority/P2"],"milestone":"M2: Hardening & Policies","assignees":[],"depends_on_titles":["Configure branch protections and rulesets"]}
